
server:
  port: 1000

spring:
  application:
    name: gr-https-ssl-ms0-orchestrator
  cloud:
    discovery:
      enabled: true


#local
host.where.docker.ip: localhost
aggregator.eureka.enabled: true

params:
  eureka:
    uri: http://localhost:8761/eureka/
  oauth2:
    issuerUri: http://localhost:8764
  gateway:
    uri: http://localhost:8766
  gatewayOauth2:
    uri: http://localhost:7766
  zipkin:
    uri: http://localhost:9411

eureka:
  client:
    service-url:
      defaultZone: ${params.eureka.uri}
    fetch-registry: true
    register-with-eureka: true
    registry-fetch-interval-seconds: ${eureka.fetch.seconds:60}

management:
  endpoints:
    web.exposure.include: "*"
    web.base-path: /actuator
    web.enable.include: health
  endpoint:
    health:
      show-details: ALWAYS

## START : uri de gr-conf-swagger-aggregator0
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha
    try-it-out-enabled: true
  show-actuator: false
swagger-params:
  issuerUri: ${params.oauth2.issuerUri}
  servers:
    liste:
      - uri: http://localhost:${server.port}
        description: Local environment
      - uri: http://10.0.0.137:${server.port}
        description: Development environment
      - uri: http://10.0.0.500:${server.port}
        description: Homologation environment
      - uri: http://10.0.0.500:${server.port}
        description: Production environment
  aggregator:
    enabled: ${aggregator.eureka.enabled}
    cors:
      uri: http://${host.where.docker.ip}:8765

caller:
  destination:
    # gr-https-ssl-ms0-orchestrator from swagger.
    client0:
      resourceUri:
      clientId:
      clientSecret:
      scopes:
      registrationId:
    client1:
      resourceUri: https://localhost:8441
      clientId:
      clientSecret:
      scopes:
      registrationId: sts-ms1-service-registration
    client2:
      resourceUri: https://localhost:8442
      clientId:
      clientSecret:
      scopes:
      registrationId: sts-ms2-service-registration
    client3:
      resourceUri: https://localhost:8443
      clientId:
      clientSecret:
      scopes:
      registrationId: sts-ms3-service-registration
    client4:
      resourceUri: https://localhost:8444
      clientId:
      clientSecret:
      scopes:
      registrationId: sts-ms4-service-registration
    client5:
      resourceUri: http://localhost:2021
      clientId:
      clientSecret:
      scopes:
      registrationId: sts-ms1-department-service-registration